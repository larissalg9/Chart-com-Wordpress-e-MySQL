wordpress:
  labels:
    app: wordpress
    component: wordpress

  deployment:
    name: wordpress
    replicas: 1
    image:
      repository: wordpress
      pullPolicy: IfNotPresent
      ports:
        containerPort: 80

  extraEnvs:
    - name: WORDPRESS_DB_HOST
      valueFrom:
        secretKeyRef:
          name: mysql-secret
          key: host
    - name: WORDPRESS_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysql-secret
          key: password
    - name: WORDPRESS_DB_USER
      valueFrom:
        secretKeyRef:
          name: mysql-secret
          key: user
    - name: WORDPRESS_DB_NAME
      valueFrom:
        secretKeyRef:
          name: mysql-secret
          key: database


  secret:
    name: mysql-secret
    host: atv-rep-mysql
    password: wordpress
    user: wordpress
    database: wordpress
    

  service:
    name: wordpress-service
    type: ClusterIP
    ports:
      port: 80
      targetPort: 80


  ingress:
    name: wordpress-ingress
    enabled: true
    className: "nginx"
    hosts:
      - host: virtualhost.local
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wordpress-service
                port:
                  number: 80


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# # Container port for the api container in deployment.yaml
# container:
#   port: 1337

# # First Ingress for the api
# ingress:
#   enabled: true
#   className: "nginx"
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: foodadvisor.app.com
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}


mysql:
  auth:
    database: wordpress
    username: wordpress
    password: wordpress
    rootPassword: wordpress
     
